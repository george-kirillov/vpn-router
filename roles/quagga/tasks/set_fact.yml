---
- name: Refresh network facts 
  setup:
    gather_subset: network
    
- name: Get local interfaces
  set_fact:
    local_interfaces:  "{{ local_interfaces|default([]) + [hostvars[inventory_hostname]['ansible_' + item ]['device']] }}"
  loop: "{{ ansible_interfaces }}"
  when: |
   hostvars[inventory_hostname]['ansible_' + item ]['ipv4']['address'] is defined
    and
   hostvars[inventory_hostname]['ansible_' + item ]['type'] == 'ether'
    and
   hostvars[inventory_hostname]['ansible_' + item ]['ipv4']['address'] | ipaddr('private')

- name: Get local address
  set_fact:
    local_addresses:  "{{ local_addresses|default([]) + [hostvars[inventory_hostname]['ansible_' + item]['ipv4']['address'] + '/' + hostvars[inventory_hostname]['ansible_' + item]['ipv4']['netmask']] }}"
  loop: "{{ local_interfaces }}"

- name: Get ovpn p2p interfaces
  set_fact:
    ovpn_p2p_interfaces:  "{{ ovpn_p2p_interfaces|default([]) + [hostvars[inventory_hostname]['ansible_' + item ]['device']] }}"
  loop: "{{ ansible_interfaces }}"
  when: |
   hostvars[inventory_hostname]['ansible_' + item ]['type'] == 'tunnel'

- name: Get bridge interfaces 
  set_fact:
    bridge_interfaces:  "{{ bridge_interfaces|default([]) + [hostvars[inventory_hostname]['ansible_' + item ]['device']] }}"
  loop: "{{ ansible_interfaces }}"
  when: |
   hostvars[inventory_hostname]['ansible_' + item ]['type'] == 'bridge'
...
